name: CI/CD Pipeline for Spring Boot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v3
      with:
        name: spring-boot-app
        path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download JAR Artifact
      uses: actions/download-artifact@v3
      with:
        name: spring-boot-app

    - name: Verify Artifact Existence
      run: |
        echo "Listing files in the target directory:"
        ls -la target/

    - name: Create Archive (tar)
      run: |
        echo "Creating tar archive..."
        tar -czvf /tmp/spring-boot-app.tar.gz -C target .

    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/scp-action@v0.1.6
      with:
        host: ${{ secrets.DO_DROPLET_IP }}
        username: ${{ secrets.DO_DROPLET_USER }}
        key: ${{ secrets.DO_PRIVATE_KEY }}
        source: /tmp/spring-boot-app.tar.gz
        target: /home/${{ secrets.DO_DROPLET_USER }}/app.tar.gz

    - name: Extract and Start Application on Droplet
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.DO_DROPLET_IP }}
        username: ${{ secrets.DO_DROPLET_USER }}
        key: ${{ secrets.DO_PRIVATE_KEY }}
        script: |
          echo "Extracting archive..."
          tar -xzvf /home/${{ secrets.DO_DROPLET_USER }}/app.tar.gz -C /home/${{ secrets.DO_DROPLET_USER }}/
          echo "Starting the application..."
          pkill -f 'java -jar app.jar' || true
          nohup java -jar /home/${{ secrets.DO_DROPLET_USER }}/app.jar > app.log 2>&1 &
